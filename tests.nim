#====================================================================
#
#             TinyRE - Tiny Regex Engine for Nim
#                  Copyright (c) 2022 Ward
#
#====================================================================

import tinyre
import std/[unittest, strformat]

# some source for the tests:
#   https://github.com/kyx0r/pikevm/blob/master/test.sh
#   https://github.com/kokke/tiny-regex-c/blob/master/tests/test1.c
#   https://github.com/nitely/nim-regex/blob/master/tests/tests.nim

suite "Test Suite for TinyRE":

  proc output(pattern: Re, s: string): string =
    for slice in bounds(s, pattern):
      if slice.a < 0 and slice.b < 0:
        result.add "(?,?)"
      else:
        result.add fmt"({slice.a},{slice.b+1})"

  test "Test Engine 1":
    check:
      output(re"\d", "5") == "(0,1)"
      output(re"\w+", "hej") == "(0,3)"
      output(re"\s", "\t \n") == "(0,1)"
      output(re"\S", "\t \n") == ""
      output(re"[\s]", "\t \n") == "(0,1)"
      output(re"[\S]", "\t \n") == ""
      output(re"\D", "5") == ""
      output(re"\W+", "hej") == ""
      output(re"[0-9]+", "12345") == "(0,5)"
      output(re"\D", "hej") == "(0,1)"
      output(re"\d", "hej") == ""
      output(re"[^\w]", "\\") == "(0,1)"
      output(re"[\W]", "\\") == "(0,1)"
      output(re"[\w]", "\\") == ""
      output(re"[^\d]", "d") == "(0,1)"
      output(re"[\d]", "d") == ""
      output(re"[^\D]", "d") == ""
      output(re"[\D]", "d") == "(0,1)"
      output(re"^.*\\.*$", "c:\\Tools") == "(0,8)"
      output(re"^[\+-]*[\d]+$", "+27") == "(0,3)"
      output(re"[abc]", "1c2") == "(1,2)"
      output(re"[abc]", "1C2") == ""
      output(re"[1-5]+", "0123456789") == "(1,6)"
      output(re"[.2]", "1C2") == "(2,3)"
      output(re"a*$", "Xaa") == "(1,3)"
      output(re"a*$", "Xaa") == "(1,3)"
      output(re"[a-h]+", "abcdefghxxx") == "(0,8)"
      output(re"[a-h]+", "ABCDEFGH") == ""
      output(re"[A-H]+", "ABCDEFGH") == "(0,8)"
      output(re"[A-H]+", "abcdefgh") == ""
      output(re"[^\s]+", "abc def") == "(0,3)"
      output(re"[^fc]+", "abc def") == "(0,2)"
      output(re"[^d\sf]+", "abc def") == "(0,3)"
      output(re"\n", "abc\ndef") == "(3,4)"
      output(re"b.\s*\n", "aa\r\nbb\r\ncc\r\n\r\n") == "(4,8)"
      output(re".*c", "abcabc") == "(0,6)"
      output(re".+c", "abcabc") == "(0,6)"
      output(re"[b-z].*", "ab") == "(1,2)"
      output(re"b[k-z]*", "ab") == "(1,2)"
      output(re"[0-9]", " - ") == ""
      output(re"[^0-9]", " - ") == "(0,1)"
      output(re"0\|", "0|") == "(0,2)"
      output(re"\d\d:\d\d:\d\d", "0s:00:00") == ""
      output(re"\d\d:\d\d:\d\d", "000:00") == ""
      output(re"\d\d:\d\d:\d\d", "00:0000") == ""
      output(re"\d\d:\d\d:\d\d", "100:0:00") == ""
      output(re"\d\d:\d\d:\d\d", "00:100:00") == ""
      output(re"\d\d:\d\d:\d\d", "0:00:100") == ""
      output(re"\d\d?:\d\d?:\d\d?", "0:0:0") == "(0,5)"
      output(re"\d\d?:\d\d?:\d\d?", "0:00:0") == "(0,6)"
      output(re"\d\d?:\d\d?:\d\d?", "0:0:00") == "(0,6)"
      output(re"\d\d?:\d\d?:\d\d?", "00:0:0") == "(0,6)"
      output(re"\d\d?:\d\d?:\d\d?", "00:00:0") == "(0,7)"
      output(re"\d\d?:\d\d?:\d\d?", "00:0:00") == "(0,7)"
      output(re"\d\d?:\d\d?:\d\d?", "0:00:00") == "(0,7)"
      output(re"\d\d?:\d\d?:\d\d?", "00:00:00") == "(0,8)"
      output(re"[Hh]ello [Ww]orld\s*[!]?", "Hello world !") == "(0,13)"
      output(re"[Hh]ello [Ww]orld\s*[!]?", "hello world !") == "(0,13)"
      output(re"[Hh]ello [Ww]orld\s*[!]?", "Hello World !") == "(0,13)"
      output(re"[Hh]ello [Ww]orld\s*[!]?", "Hello world! ") == "(0,12)"
      output(re"[Hh]ello [Ww]orld\s*[!]?", "Hello world !") == "(0,13)"
      output(re"[Hh]ello [Ww]orld\s*[!]?", "hello World !") == "(0,13)"
      output(re"\d\d?:\d\d?:\d\d?", "a:0") == ""
      output(re"[^\w][^-1-4]", ")T") == "(0,2)"
      output(re"[^\w][^-1-4]", ")^") == "(0,2)"
      output(re"[^\w][^-1-4]", "*)") == "(0,2)"
      output(re"[^\w][^-1-4]", "!.") == "(0,2)"
      output(re"[^\w][^-1-4]", " x") == "(0,2)"
      output(re"[^\w][^-1-4]", "$b") == "(0,2)"
      output(re".?bar", "real_bar") == "(4,8)"
      output(re".?bar", "real_foo") == ""
      output(re"X?Y", "Z") == ""
      output(re"[a-z]+\nbreak", "blahblah\nbreak") == "(0,14)"
      output(re"[a-z\s]+\nbreak", "bla bla \nbreak") == "(0,14)"

  test "Test Engine 2":
    check:
      output(re"abracadabra$", "abracadabracadabra") == "(7,18)"
      output(re"a...b", "abababbb") == "(2,7)"
      output(re"XXXXXX", "..XXXXXX") == "(2,8)"
      output(re"\)", "()") == "(1,2)"
      output(re"a]", "a]a") == "(0,2)"
      output(re"}", "}") == "(0,1)"
      output(re"\}", "}") == "(0,1)"
      output(re"\]", "]") == "(0,1)"
      output(re"\[", "[") == "(0,1)"
      output(re"]", "]") == "(0,1)"
      output(re"\{", "{") == "(0,1)"
      output(re"}", "}") == "(0,1)"
      output(re"^a", "ax") == "(0,1)"
      output(re"\^a", "a^a") == "(1,3)"
      output(re"a\^", "a^") == "(0,2)"
      output(re"a$", "aa") == "(1,2)"
      output(re"a\$", "a$") == "(0,2)"
      output(re"^$", "") == "(0,0)"
      output(re"$^", "") == "(0,0)"
      output(re"a($)", "aa") == "(1,2)(2,2)"
      output(re"a*(^a)", "aa") == "(0,1)(0,1)"
      output(re"(..)*(...)*", "a") == "(0,0)(?,?)(?,?)"
      output(re"(..)*(...)*", "abcd") == "(0,4)(2,4)(?,?)"
      output(re"(ab|a)(bc|c)", "abc") == "(0,3)(0,2)(2,3)"
      output(re"(ab)c|abc", "abc") == "(0,3)(0,2)"
      output(re"a{0}b", "ab") == "(1,2)"
      output(re"(a*)(b?)(b+)b{3}", "aaabbbbbbb") == "(0,10)(0,3)(3,4)(4,7)"
      output(re"(a*)(b{0,1})(b{1,})b{3}", "aaabbbbbbb") == "(0,10)(0,3)(3,4)(4,7)"
      output(re"((a|a)|a)", "a") == "(0,1)(0,1)(0,1)"
      output(re"(a*)(a|aa)", "aaaa") == "(0,4)(0,3)(3,4)"
      output(re"a*(a.|aa)", "aaaa") == "(0,4)(2,4)"
      output(re"a(b)|c(d)|a(e)f", "aef") == "(0,3)(?,?)(?,?)(1,2)"
      output(re"(a|b)?.*", "b") == "(0,1)(0,1)"
      output(re"(a|b)c|a(b|c)", "ac") == "(0,2)(0,1)(?,?)"
      output(re"(a|b)c|a(b|c)", "ab") == "(0,2)(?,?)(1,2)"
      output(re"(a|b)*c|(a|ab)*c", "abc") == "(0,3)(1,2)(?,?)"
      output(re"(a|b)*c|(a|ab)*c", "xc") == "(1,2)(?,?)(?,?)"
      output(re"(.a|.b).*|.*(.a|.b)", "xa") == "(0,2)(0,2)(?,?)"
      output(re"a?(ab|ba)ab", "abab") == "(0,4)(0,2)"
      output(re"a?(ac{0}b|ba)ab", "abab") == "(0,4)(0,2)"
      output(re"ab|abab", "abbabab") == "(0,2)"
      output(re"aba|bab|bba", "baaabbbaba") == "(5,8)"
      output(re"aba|bab", "baaabbbaba") == "(6,9)"
      output(re"(aa|aaa)*|(a|aaaaa)", "aa") == "(0,2)(0,2)(?,?)"
      output(re"(a.|.a.)*|(a|.a...)", "aa") == "(0,2)(0,2)(?,?)"
      output(re"ab|a", "xabc") == "(1,3)"
      output(re"ab|a", "xxabc") == "(2,4)"
      output(reI"(Ab|cD)*", "aBcD") == "(0,4)(2,4)"
      output(re"[^-]", "--a") == "(2,3)"
      output(re"[a-]*", "--a") == "(0,3)"
      output(re"[a-m-]*", "--amoma--") == "(0,4)"
      output(re":::1:::0:|:::1:1:0:", ":::0:::1:::1:::0:") == "(8,17)"
      output(re":::1:::0:|:::1:1:1:", ":::0:::1:::1:::0:") == "(8,17)"
      output(re"[[-]]", "[[-]]") == "(2,4)"
      output(re"\n", "\n") == "(0,1)"
      output(re"\n", "\n") == "(0,1)"
      output(re"[^a]", "\n") == "(0,1)"
      output(re"\na", "\na") == "(0,2)"
      output(re"(a)(b)(c)", "abc") == "(0,3)(0,1)(1,2)(2,3)"
      output(re"xxx", "xxx") == "(0,3)"
      output(re"a?(ab|ba)*", "ababababababababababababababababababababababababababababababababababababababababa") == "(0,81)(79,81)"
      output(re"abaa|abbaa|abbbaa|abbbbaa", "ababbabbbabbbabbbbabbbbaa") == "(18,25)"
      output(re"abaa|abbaa|abbbaa|abbbbaa", "ababbabbbabbbabbbbabaa") == "(18,22)"
      output(re"aaac|aabc|abac|abbc|baac|babc|bbac|bbbc", "baaabbbabac") == "(7,11)"
      output(re".*", "\x01\x7f") == "(0,2)"
      output(re"aaaa|bbbb|cccc|ddddd|eeeeee|fffffff|gggg|hhhh|iiiii|jjjjj|kkkkk|llll", "XaaaXbbbXcccXdddXeeeXfffXgggXhhhXiiiXjjjXkkkXlllXcbaXaaaa") == "(53,57)"
      output(re("aaaa\nbbbb\ncccc\nddddd\neeeeee\nfffffff\ngggg\nhhhh\niiiii\\nkkkkk\nllll"), "XaaaXbbbXcccXdddXeeeXfffXgggXhhhXiiiXjjjXkkkXlllXcbaXaaaa") == ""
      output(re"a*a*a*a*a*b", "aaaaaaaaab") == "(0,10)"
      output(re"^", "") == "(0,0)"
      output(re"$", "") == "(0,0)"
      output(re"^$", "") == "(0,0)"
      output(re"^a$", "a") == "(0,1)"
      output(re"abc", "abc") == "(0,3)"
      output(re"abc", "xabcy") == "(1,4)"
      output(re"abc", "ababc") == "(2,5)"
      output(re"ab*c", "abc") == "(0,3)"
      output(re"ab*bc", "abc") == "(0,3)"
      output(re"ab*bc", "abbc") == "(0,4)"
      output(re"ab*bc", "abbbbc") == "(0,6)"
      output(re"ab+bc", "abbc") == "(0,4)"
      output(re"ab+bc", "abbbbc") == "(0,6)"
      output(re"ab?bc", "abbc") == "(0,4)"
      output(re"ab?bc", "abc") == "(0,3)"
      output(re"ab?c", "abc") == "(0,3)"
      output(re"^abc$", "abc") == "(0,3)"
      output(re"^abc", "abcc") == "(0,3)"
      output(re"abc$", "aabc") == "(1,4)"
      output(re"^", "abc") == "(0,0)"
      output(re"$", "abc") == "(3,3)"
      output(re"a.c", "abc") == "(0,3)"
      output(re"a.c", "axc") == "(0,3)"
      output(re"a.*c", "axyzc") == "(0,5)"
      output(re"a[bc]d", "abd") == "(0,3)"
      output(re"a[b-d]e", "ace") == "(0,3)"
      output(re"a[b-d]", "aac") == "(1,3)"
      output(re"a[-b]", "a-") == "(0,2)"
      output(re"a[b-]", "a-") == "(0,2)"
      output(re"a]", "a]") == "(0,2)"
      output(re"a[\]]b", "a]b") == "(0,3)"
      output(re"a[^bc]d", "aed") == "(0,3)"
      output(re"a[^-b]c", "adc") == "(0,3)"
      output(re"a[^\]b]c", "adc") == "(0,3)"
      output(re"ab|cd", "abc") == "(0,2)"
      output(re"ab|cd", "abcd") == "(0,2)"
      output(re"a\(b", "a(b") == "(0,3)"
      output(re"a\(*b", "ab") == "(0,2)"
      output(re"a\(*b", "a((b") == "(0,4)"
      output(re"((a))", "abc") == "(0,1)(0,1)(0,1)"
      output(re"(a)b(c)", "abc") == "(0,3)(0,1)(2,3)"
      output(re"a+b+c", "aabbabc") == "(4,7)"
      output(re"a*", "aaa") == "(0,3)"
      output(re"(a*)*", "-") == "(0,0)(?,?)"
      output(re"(a*)+", "-") == "(0,0)(0,0)"
      output(re"(a*|b)*", "-") == "(0,0)(?,?)"
      output(re"(a*|b)*", "-") == "(0,0)(?,?)"
      output(re"(a+|b)*", "ab") == "(0,2)(1,2)"
      output(re"(a+|b)+", "ab") == "(0,2)(1,2)"
      output(re"(a+|b)?", "ab") == "(0,1)(0,1)"
      output(re"[^ab]*", "cde") == "(0,3)"
      output(re"(^)*", "-") == "(0,0)(?,?)"
      output(re"a*", "") == "(0,0)"
      output(re"([abc])*d", "abbbcd") == "(0,6)(4,5)"
      output(re"([abc])*bcd", "abcd") == "(0,4)(0,1)"
      output(re"a|b|c|d|e", "e") == "(0,1)"
      output(re"(a|b|c|d|e)f", "ef") == "(0,2)(0,1)"
      output(re"((a*|b))*", "-") == "(0,0)(?,?)(?,?)"
      output(re"abcd*efg", "abcdefg") == "(0,7)"
      output(re"ab*", "xabyabbbz") == "(1,3)"
      output(re"ab*", "xayabbbz") == "(1,2)"
      output(re"(ab|cd)e", "abcde") == "(2,5)(2,4)"
      output(re"[abhgefdc]ij", "hij") == "(0,3)"
      output(re"(a|b)c*d", "abcd") == "(1,4)(1,2)"
      output(re"(ab|ab*)bc", "abc") == "(0,3)(0,1)"
      output(re"a([bc]*)c*", "abc") == "(0,3)(1,3)"
      output(re"a([bc]*)(c*d)", "abcd") == "(0,4)(1,3)(3,4)"
      output(re"a([bc]+)(c*d)", "abcd") == "(0,4)(1,3)(3,4)"
      output(re"a([bc]*)(c+d)", "abcd") == "(0,4)(1,2)(2,4)"
      output(re"a[bcd]*dcdcde", "adcdcde") == "(0,7)"
      output(re"(ab|a)b*c", "abc") == "(0,3)(0,2)"
      output(re"((a)(b)c)(d)", "abcd") == "(0,4)(0,3)(0,1)(1,2)(3,4)"
      output(re"[A-Za-z_][A-Za-z0-9_]*", "alpha") == "(0,5)"
      output(re"^a(bc+|b[eh])g|.h$", "abh") == "(1,3)(?,?)"
      output(re"(bc+d$|ef*g.|h?i(j|k))", "effgz") == "(0,5)(0,5)(?,?)"
      output(re"(bc+d$|ef*g.|h?i(j|k))", "ij") == "(0,2)(0,2)(1,2)"
      output(re"(bc+d$|ef*g.|h?i(j|k))", "reffgz") == "(1,6)(1,6)(?,?)"
      output(re"(((((((((a)))))))))", "a") == "(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)(0,1)"
      output(re"multiple words", "multiple words yeah") == "(0,14)"
      output(re"(.*)c(.*)", "abcde") == "(0,5)(0,2)(3,5)"
      output(re"abcd", "abcd") == "(0,4)"
      output(re"a(bc)d", "abcd") == "(0,4)(1,3)"
      output(re"a[-]?c", "ac") == "(0,3)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Qaddafi") == "(0,15)(?,?)(10,12)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Mo\"ammar Gadhafi") == "(0,16)(?,?)(11,13)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Kaddafi") == "(0,15)(?,?)(10,12)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Qadhafi") == "(0,15)(?,?)(10,12)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Gadafi") == "(0,14)(?,?)(10,11)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Mu\"ammar Qadafi") == "(0,15)(?,?)(11,12)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Moamar Gaddafi") == "(0,14)(?,?)(9,11)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Mu\"ammar Qadhdhafi") == "(0,18)(?,?)(13,15)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Khaddafi") == "(0,16)(?,?)(11,13)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Ghaddafy") == "(0,16)(?,?)(11,13)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Ghadafi") == "(0,15)(?,?)(11,12)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Ghaddafi") == "(0,16)(?,?)(11,13)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muamar Kaddafi") == "(0,14)(?,?)(9,11)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Quathafi") == "(0,16)(?,?)(11,13)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Muammar Gheddafi") == "(0,16)(?,?)(11,13)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Moammar Khadafy") == "(0,15)(?,?)(11,12)"
      output(re"M[ou]""?am+[ae]r .*([AEae]l[- ])?[GKQ]h?[aeu]+([dtz][dhz]?)+af[iy]", "Moammar Qudhafi") == "(0,15)(?,?)(10,12)"
      output(re"a+(b|c)*d+", "aabcdd") == "(0,6)(3,4)"
      output(re"^.+$", "vivi") == "(0,4)"
      output(re"^(.+)$", "vivi") == "(0,4)(0,4)"
      output(re"^([^!.]+).att.com!(.+)$", "gryphon.att.com!eby") == "(0,19)(0,7)(16,19)"
      output(re"^([^!]+!)?([^!]+)$", "bas") == "(0,3)(?,?)(0,3)"
      output(re"^([^!]+!)?([^!]+)$", "bar!bas") == "(0,7)(0,4)(4,7)"
      output(re"^([^!]+!)?([^!]+)$", "foo!bas") == "(0,7)(0,4)(4,7)"
      output(re"^.+!([^!]+!)([^!]+)$", "foo!bar!bas") == "(0,11)(4,8)(8,11)"
      output(re"((foo)|(bar))!bas", "bar!bas") == "(0,7)(0,3)(?,?)(0,3)"
      output(re"((foo)|(bar))!bas", "foo!bar!bas") == "(4,11)(4,7)(?,?)(4,7)"
      output(re"((foo)|(bar))!bas", "foo!bas") == "(0,7)(0,3)(0,3)(?,?)"
      output(re"((foo)|bar)!bas", "bar!bas") == "(0,7)(0,3)(?,?)"
      output(re"((foo)|bar)!bas", "foo!bar!bas") == "(4,11)(4,7)(?,?)"
      output(re"((foo)|bar)!bas", "foo!bas") == "(0,7)(0,3)(0,3)"
      output(re"(foo|(bar))!bas", "bar!bas") == "(0,7)(0,3)(0,3)"
      output(re"(foo|(bar))!bas", "foo!bar!bas") == "(4,11)(4,7)(4,7)"
      output(re"(foo|(bar))!bas", "foo!bas") == "(0,7)(0,3)(?,?)"
      output(re"(foo|bar)!bas", "bar!bas") == "(0,7)(0,3)"
      output(re"(foo|bar)!bas", "foo!bar!bas") == "(4,11)(4,7)"
      output(re"(foo|bar)!bas", "foo!bas") == "(0,7)(0,3)"
      output(re"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "foo!bar!bas") == "(0,11)(0,11)(?,?)(?,?)(4,8)(8,11)"
      output(re"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "bas") == "(0,3)(?,?)(0,3)(?,?)(?,?)"
      output(re"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "bar!bas") == "(0,7)(0,4)(4,7)(?,?)(?,?)"
      output(re"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "foo!bar!bas") == "(0,11)(?,?)(?,?)(4,8)(8,11)"
      output(re"^([^!]+!)?([^!]+)$|^.+!([^!]+!)([^!]+)$", "foo!bas") == "(0,7)(0,4)(4,7)(?,?)(?,?)"
      output(re"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "bas") == "(0,3)(0,3)(?,?)(0,3)(?,?)(?,?)"
      output(re"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "bar!bas") == "(0,7)(0,7)(0,4)(4,7)(?,?)(?,?)"
      output(re"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "foo!bar!bas") == "(0,11)(0,11)(?,?)(?,?)(4,8)(8,11)"
      output(re"^(([^!]+!)?([^!]+)|.+!([^!]+!)([^!]+))$", "foo!bas") == "(0,7)(0,7)(0,4)(4,7)(?,?)(?,?)"
      output(re".*(/XXX).*", "/XXX") == "(0,4)(0,4)"
      output(re".*(\\XXX).*", "\\XXX") == "(0,4)(0,4)"
      output(re"\\XXX", "\\XXX") == "(0,4)"
      output(re".*(/000).*", "/000") == "(0,4)(0,4)"
      output(re".*(\\000).*", "\\000") == "(0,4)(0,4)"
      output(re"\\000", "\\000") == "(0,4)"

  test "Test Engine 3":
    check:
      output(re"(a*)*", "a") == "(0,1)(0,1)"
      output(re"(a*)*", "x") == "(0,0)(?,?)"
      output(re"(a*)*", "aaaaaa") == "(0,6)(0,6)"
      output(re"(a*)*", "aaaaaax") == "(0,6)(0,6)"
      output(re"(a*)+", "a") == "(0,1)(0,1)"
      output(re"(a*)+", "x") == "(0,0)(0,0)"
      output(re"(a*)+", "aaaaaa") == "(0,6)(0,6)"
      output(re"(a*)+", "aaaaaax") == "(0,6)(0,6)"
      output(re"(a+)*", "a") == "(0,1)(0,1)"
      output(re"(a+)*", "x") == "(0,0)(?,?)"
      output(re"(a+)*", "aaaaaa") == "(0,6)(0,6)"
      output(re"(a+)*", "aaaaaax") == "(0,6)(0,6)"
      output(re"(a+)+", "a") == "(0,1)(0,1)"
      output(re"(a+)+", "x") == ""
      output(re"(a+)+", "aaaaaa") == "(0,6)(0,6)"
      output(re"(a+)+", "aaaaaax") == "(0,6)(0,6)"
      output(re"([a]*)*", "a") == "(0,1)(0,1)"
      output(re"([a]*)*", "x") == "(0,0)(?,?)"
      output(re"([a]*)*", "aaaaaa") == "(0,6)(0,6)"
      output(re"([a]*)*", "aaaaaax") == "(0,6)(0,6)"
      output(re"([a]*)+", "a") == "(0,1)(0,1)"
      output(re"([a]*)+", "x") == "(0,0)(0,0)"
      output(re"([a]*)+", "aaaaaa") == "(0,6)(0,6)"
      output(re"([a]*)+", "aaaaaax") == "(0,6)(0,6)"
      output(re"([^b]*)*", "a") == "(0,1)(0,1)"
      output(re"([^b]*)*", "b") == "(0,0)(?,?)"
      output(re"([^b]*)*", "aaaaaa") == "(0,6)(0,6)"
      output(re"([^b]*)*", "aaaaaab") == "(0,6)(0,6)"
      output(re"([ab]*)*", "a") == "(0,1)(0,1)"
      output(re"([ab]*)*", "aaaaaa") == "(0,6)(0,6)"
      output(re"([ab]*)*", "ababab") == "(0,6)(0,6)"
      output(re"([ab]*)*", "bababa") == "(0,6)(0,6)"
      output(re"([ab]*)*", "b") == "(0,1)(0,1)"
      output(re"([ab]*)*", "bbbbbb") == "(0,6)(0,6)"
      output(re"([ab]*)*", "aaaabcde") == "(0,5)(0,5)"
      output(re"([^a]*)*", "b") == "(0,1)(0,1)"
      output(re"([^a]*)*", "bbbbbb") == "(0,6)(0,6)"
      output(re"([^a]*)*", "aaaaaa") == "(0,0)(?,?)"
      output(re"([^ab]*)*", "ccccxx") == "(0,6)(0,6)"
      output(re"([^ab]*)*", "ababab") == "(0,0)(?,?)"
      output(re"((?:z)+|a)*", "zabcde") == "(0,2)(1,2)"
      output(re"a+?", "aaaaaa") == "(0,1)"
      output(re"(a)", "aaa") == "(0,1)(0,1)"
      output(re"(a*?)", "aaa") == "(0,0)(0,0)"
      output(re"(a)*?", "aaa") == "(0,0)(?,?)"
      output(re"(a*?)*?", "aaa") == "(0,0)(?,?)"
      output(re"(a*)*(x)", "x") == "(0,1)(?,?)(0,1)"
      output(re"(a*)*(x)", "ax") == "(0,2)(0,1)(1,2)"
      output(re"(a*)*(x)", "axa") == "(0,2)(0,1)(1,2)"
      output(re"(a*)*(x)", "x") == "(0,1)(?,?)(0,1)"
      output(re"(a*)*(x)", "ax") == "(0,2)(0,1)(1,2)"
      output(re"(a*)*(x)", "axa") == "(0,2)(0,1)(1,2)"
      output(re"(a*)+(x)", "x") == "(0,1)(0,0)(0,1)"
      output(re"(a*)+(x)", "ax") == "(0,2)(0,1)(1,2)"
      output(re"(a*)+(x)", "axa") == "(0,2)(0,1)(1,2)"
      output(re"(a*){2}(x)", "x") == "(0,1)(0,0)(0,1)"
      output(re"(a*){2}(x)", "ax") == "(0,2)(1,1)(1,2)"
      output(re"(a*){2}(x)", "axa") == "(0,2)(1,1)(1,2)"

  test "Test Engine 4":
    check:
      output(re"((..)|(.))", "") == ""
      output(re"((..)|(.))((..)|(.))", "") == ""
      output(re"((..)|(.))((..)|(.))((..)|(.))", "") == ""
      output(re"((..)|(.)){1}", "") == ""
      output(re"((..)|(.)){2}", "") == ""
      output(re"((..)|(.)){3}", "") == ""
      output(re"((..)|(.))*", "") == "(0,0)(?,?)(?,?)(?,?)"
      output(re"((..)|(.))", "a") == "(0,1)(0,1)(?,?)(0,1)"
      output(re"((..)|(.))((..)|(.))", "a") == ""
      output(re"((..)|(.))((..)|(.))((..)|(.))", "a") == ""
      output(re"((..)|(.)){1}", "a") == "(0,1)(0,1)(?,?)(0,1)"
      output(re"((..)|(.)){2}", "a") == ""
      output(re"((..)|(.)){3}", "a") == ""
      output(re"((..)|(.))*", "a") == "(0,1)(0,1)(?,?)(0,1)"
      output(re"((..)|(.))", "aa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.))((..)|(.))", "aa") == "(0,2)(0,1)(?,?)(0,1)(1,2)(?,?)(1,2)"
      output(re"((..)|(.))((..)|(.))((..)|(.))", "aa") == ""
      output(re"((..)|(.)){1}", "aa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.)){2}", "aa") == "(0,2)(1,2)(?,?)(1,2)"
      output(re"((..)|(.)){3}", "aa") == ""
      output(re"((..)|(.))*", "aa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.))", "aaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.))((..)|(.))", "aaa") == "(0,3)(0,2)(0,2)(?,?)(2,3)(?,?)(2,3)"
      output(re"((..)|(.))((..)|(.))((..)|(.))", "aaa") == "(0,3)(0,1)(?,?)(0,1)(1,2)(?,?)(1,2)(2,3)(?,?)(2,3)"
      output(re"((..)|(.)){1}", "aaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.)){2}", "aaa") == "(0,3)(2,3)(0,2)(2,3)"
      output(re"((..)|(.)){3}", "aaa") == "(0,3)(2,3)(?,?)(2,3)"
      output(re"((..)|(.))*", "aaa") == "(0,3)(2,3)(0,2)(2,3)"
      output(re"((..)|(.))", "aaaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.))((..)|(.))", "aaaa") == "(0,4)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)"
      output(re"((..)|(.))((..)|(.))((..)|(.))", "aaaa") == "(0,4)(0,2)(0,2)(?,?)(2,3)(?,?)(2,3)(3,4)(?,?)(3,4)"
      output(re"((..)|(.)){1}", "aaaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.)){2}", "aaaa") == "(0,4)(2,4)(2,4)(?,?)"
      output(re"((..)|(.)){3}", "aaaa") == "(0,4)(3,4)(0,2)(3,4)"
      output(re"((..)|(.))*", "aaaa") == "(0,4)(2,4)(2,4)(?,?)"
      output(re"((..)|(.))", "aaaaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.))((..)|(.))", "aaaaa") == "(0,4)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)"
      output(re"((..)|(.))((..)|(.))((..)|(.))", "aaaaa") == "(0,5)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)(4,5)(?,?)(4,5)"
      output(re"((..)|(.)){1}", "aaaaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.)){2}", "aaaaa") == "(0,4)(2,4)(2,4)(?,?)"
      output(re"((..)|(.)){3}", "aaaaa") == "(0,5)(4,5)(2,4)(4,5)"
      output(re"((..)|(.))*", "aaaaa") == "(0,5)(4,5)(2,4)(4,5)"
      output(re"((..)|(.))", "aaaaaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.))((..)|(.))", "aaaaaa") == "(0,4)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)"
      output(re"((..)|(.))((..)|(.))((..)|(.))", "aaaaaa") == "(0,6)(0,2)(0,2)(?,?)(2,4)(2,4)(?,?)(4,6)(4,6)(?,?)"
      output(re"((..)|(.)){1}", "aaaaaa") == "(0,2)(0,2)(0,2)(?,?)"
      output(re"((..)|(.)){2}", "aaaaaa") == "(0,4)(2,4)(2,4)(?,?)"
      output(re"((..)|(.)){3}", "aaaaaa") == "(0,6)(4,6)(4,6)(?,?)"
      output(re"((..)|(.))*", "aaaaaa") == "(0,6)(4,6)(4,6)(?,?)"
      output(re"X(.?){0,}Y", "X1234567Y") == "(0,9)(7,8)"
      output(re"X(.?){1,}Y", "X1234567Y") == "(0,9)(7,8)"
      # output(re"X(.?){2,}Y", "X1234567Y") == "(0,9)(7,8)"
      # output(re"X(.?){3,}Y", "X1234567Y") == "(0,9)(7,8)"
      # output(re"X(.?){4,}Y", "X1234567Y") == "(0,9)(7,8)"
      # output(re"X(.?){5,}Y", "X1234567Y") == "(0,9)(7,8)"
      # output(re"X(.?){6,}Y", "X1234567Y") == "(0,9)(7,8)"
      # output(re"X(.?){7,}Y", "X1234567Y") == "(0,9)(7,8)"
      # output(re"X(.?){8,}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){0,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){1,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){2,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){3,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){4,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){5,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){6,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){7,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"X(.?){8,8}Y", "X1234567Y") == "(0,9)(8,8)"
      output(re"(a|ab|c|bcd){0,}(d*)", "ababcd") == "(0,1)(0,1)(1,1)"
      output(re"(a|ab|c|bcd){1,}(d*)", "ababcd") == "(0,1)(0,1)(1,1)"
      output(re"(a|ab|c|bcd){2,}(d*)", "ababcd") == "(0,6)(3,6)(6,6)"
      output(re"(a|ab|c|bcd){3,}(d*)", "ababcd") == "(0,6)(3,6)(6,6)"
      output(re"(a|ab|c|bcd){4,}(d*)", "ababcd") == ""
      output(re"(a|ab|c|bcd){0,10}(d*)", "ababcd") == "(0,1)(0,1)(1,1)"
      output(re"(a|ab|c|bcd){1,10}(d*)", "ababcd") == "(0,1)(0,1)(1,1)"
      output(re"(a|ab|c|bcd){2,10}(d*)", "ababcd") == "(0,6)(3,6)(6,6)"
      output(re"(a|ab|c|bcd){3,10}(d*)", "ababcd") == "(0,6)(3,6)(6,6)"
      output(re"(a|ab|c|bcd){4,10}(d*)", "ababcd") == ""
      output(re"(a|ab|c|bcd)*(d*)", "ababcd") == "(0,1)(0,1)(1,1)"
      output(re"(a|ab|c|bcd)+(d*)", "ababcd") == "(0,1)(0,1)(1,1)"
      output(re"(ab|a|c|bcd){0,}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){1,}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){2,}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){3,}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){4,}(d*)", "ababcd") == ""
      output(re"(ab|a|c|bcd){0,10}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){1,10}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){2,10}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){3,10}(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd){4,10}(d*)", "ababcd") == ""
      output(re"(ab|a|c|bcd)*(d*)", "ababcd") == "(0,6)(4,5)(5,6)"
      output(re"(ab|a|c|bcd)+(d*)", "ababcd") == "(0,6)(4,5)(5,6)"

  test "Test Engine 5":
    check:
      output(re"abc", "abcdef") == "(0,3)"
      output(re"cde", "abcdef") == "(2,5)"
      output(re"abc*", "abdef") == "(0,2)"
      output(re"abc*", "abcccdef") == "(0,5)"
      output(re"abc+", "abdef") == ""
      output(re"abc+", "abcccdef") == "(0,5)"
      output(re"(([0-9]*)([a-z]*)[0-9]*)", "1234hello567") == "(0,12)(0,12)(0,4)(4,9)"
      output(re"([0-9]*)(([a-z]*)([0-9]*))", "1234hello567") == "(0,12)(0,4)(4,12)(4,9)(9,12)"
      output(re"(([0-9]*)(?:[a-z]*)[0-9]*)", "1234hello568") == "(0,12)(0,12)(0,4)"
      output(re"(?:[0-9]*)(([a-z]*)(?:[0-9]*))", "1234hello568") == "(0,12)(4,12)(4,9)"
      output(re"([0-9]*)(?:([a-z]*)(?:[0-9]*))", "1234hello568") == "(0,12)(0,4)(4,9)"
      output(re"(?:)", "1234hello568") == "(0,0)"
      output(re"1?:", "1:") == "(0,2)"
      output(re"[0-9]+", "123abc456") == "(0,3)"
      output(re"[a-zA-Z0-9_]+", "123abc_456 abc") == "(0,10)"
      output(re"(([0-9]*)([a-z]*)[a-zA-Z0-9_]*)", "123hello456") == "(0,11)(0,11)(0,3)(3,8)"
      output(re"[a]*", "a") == "(0,1)"
      output(re"([yab]*)(e*)([cd])", "xyac") == "(1,4)(1,3)(3,3)(3,4)"
      output(re"([yab]*)(e*)([^y]?)$", "xyac") == "(1,4)(1,3)(3,3)(3,4)"
      output(re"[-]*", "--") == "(0,2)"
      output(re"[-a]*", "-a-b") == "(0,3)"
      output(re"[-ab]*", "-a-b") == "(0,4)"
      output(re"[-a-c]*", "-a-b-d-") == "(0,5)"
      output(re"[a-]*", "-a-b") == "(0,3)"
      output(re"[ab-]*", "-a-b") == "(0,4)"
      output(re"[a-c-]*", "-a-b-d-") == "(0,5)"
      output(re"(\?:)", ":") == ""
      output(re"\(?:", "(:") == "(0,2)"
      output(re"[^a]*b", "hhagbdbdbjsjjjda") == "(3,9)"
      output(re"a{5}", "aaaaaaaa") == "(0,5)"
      output(re"[^a]{1,3}", "vbcvb") == "(0,3)"
      output(re"(abc+){5}|[0-9]{1,}", "abcabcabcabcabcabchsdfhsdh") == "(0,15)(12,15)"
      output(re"(abc+){5}|[0-9]{1,}", "62374623") == "(0,8)(?,?)"
      output(re"b[^c]*", "djfjgjsdfjbshdhfhshd") == "(10,20)"
      output(re"۱۲۳۴۵۶۷۸۹۰", "۱۲۳۴۵۶۷۸۹۰") == "(0,20)"
      output(reU"[йцукен]", "ке") == "(0,2)"
      output(reU"日本語*", "日本語語語語語語語本本本本") == "(0,27)"
      output(reU"([^ひらがな])|(な+)", "なななな") == "(0,12)(?,?)(0,12)"
      output(reU"([^ひらがな])|(な+)", "abc") == "(0,1)(0,1)(?,?)"
      output(re"([^abc])|(a+)", "aaaa") == "(0,4)(?,?)(0,4)"
      output(re"[a-g]+", "aaaabcdefghij") == "(0,10)"
      output(re"[а-г]+", "ааааабвг...") == "(0,16)"
      output(re"called|chief|dust|familiar|forth|waif|campaign|divers|smile|notice|kill|human|stands|nightshade|dollar|doughty|gloaming|twist|July|officers|wrest|coop|one|ability|welcome|significance|writer|spring|it's|helped|set|Paris|from|coomb|stay|hummock|taken|anon|makes|boat|nearly|am|justice|further|expression|contemporary|sooth|order|about|question|lived|apply|educational|of|night|satisfy|opened|never|success|until|visit|promise|parts|beneath|matter|typical|bade|apartment|rapidly|primary|bring|throat|hold|laws|understand|trade|desire|material|evidence|another|often|plash|model|someone|bond|hell|relationship|probably|exercise|performance|wants|known|countries|gammer|leeward|took|itself|representative|objection|aircraft", "hhfd h23  performance") == "(10,21)"
      output(re"abc+h+d+f", "abcccccccccccchdf") == "(0,17)"
      output(re"([0-9]|abc){5}[0-9]+(grh)", "344444442344grhhhsdfg") == "(0,15)(4,5)(12,15)"
      output(re"[A-Fa-f0-9]{64}", "bf33d4a0dbbee85061531c9d47e5aae692c0729e5c9c1fa21c46d9bcab5f52c5") == "(0,64)"
      output(re"<tag>[^<]*</tag>", "ajdas <tag> sidufisudf hsdfhshdfh sdf </tag> asjdfjs") == "(6,44)"
      output(re"^([a-z0-9_.-]+)@([0-9a-z.-]+)\.([a-z.]{2,5})$", "veloval596@godpeed.com") == "(0,22)(0,10)(11,18)(19,22)"
      output(re"abc\$d", "abc") == ""
      output(re"abc$|cdb", "abccdb") == "(3,6)"
      output(re"abc$|c", "abcc") == "(2,3)"
      output(re"^ac|cdb", "abccdb") == "(3,6)"
      output(re"^abc+d", "abccdb") == "(0,5)"
      output(re"^(abc|kj)", "kj") == "(0,2)(0,2)"
      output(re"^(abc|kj)", "jhdfh kj hhd") == ""
      output(re"(^abc)|(abc)", " abc") == "(1,4)(?,?)(1,4)"
      output(re"(abc)|(^abc)", " abc") == "(1,4)(1,4)(?,?)"
      output(re"(^abc)|(abc$)", " abc") == "(1,4)(?,?)(1,4)"
      output(re"(^abc)|(abc$)", "abc") == "(0,3)(0,3)(?,?)"
      output(re"(^abc)|(abc$)", " abc bc") == ""
      output(re"([^qwe]*rty)|(asd[^fgh]*)", "qweasd     qqqq fff") == "(3,16)(?,?)(3,16)"
      output(re"([^qwe]*rty+)|(asd[^fgh]*)", "qwehh  sjsjsj rtyyyyyyyyyj sdj") == "(3,25)(3,25)(?,?)"
      output(re"((abc))(fv)", "abcfv") == "(0,5)(0,3)(0,3)(3,5)"
      output(re"\<abc", "   	   abc") == "(7,10)"
      output(re"\<abc", " hsdh  abc") == "(7,10)"
      output(re"\<(as|js)", "     js hashasd") == "(5,7)(5,7)"
      output(re"\<(as|js)", "     gjs hashasd") == ""
      output(re"ab\<d", "ab   d") == ""
      output(re"\<d+(abc|fbc|bcd)", "     bcddd bddddfbc") == ""
      output(re"\<d+(abc|fbc|bcd)", "     bcddd ddvddfbc") == ""
      output(re"\<d+(abc|fbc|bcd)", "     bcddd ddddfbc") == "(11,18)(15,18)"
      output(re"b|\<(abc|fbc|bcd)", "     bcddd fbc") == "(5,6)(?,?)"
      output(re"\<abc", "abc") == "(0,3)"
      output(re"\<abc\>", "   abc   ") == "(3,6)"
      output(re"abc\>", "abcccc") == ""
      output(re"abc\>", "abc") == "(0,3)"
      output(re"\<(hello|world|word|nice|try)\>", "world") == "(0,5)(0,5)"
      output(re"\<(hello|world|word|nice|try)\>", " world ") == "(1,6)(1,6)"
      output(re"\<(hello|world|word|nice|try)\>", "    worldfsd") == ""
      output(re"\<(hello|world|word|nice|try)\>", "    dworld") == ""
      output(re"\<(hello|world)\>|\<(word|nice|try)\>", "    nice   ") == "(4,8)(?,?)(4,8)"
      output(re"(abc+)|\<[^k]*\>", "    nicehdhfd") == "(4,13)(?,?)"
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "21361264") == "(0,8)(0,8)"
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "0x2346ULL") == "(0,9)(0,9)"
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "1.234423") == "(0,8)(0,8)"
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "	abc23321abb") == ""
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "   3245 jjfjjj") == "(3,7)(3,7)"
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "   0x663q") == ""
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", " x37247") == ""
      output(re"[-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>", "  124435.7727ULL") == "(2,16)(2,16)"
      output(re"(([-+]?\<(0[xX][0-9a-fA-FUL]+|[0-9.]{1,}[0-9eEfFuULl]+|[0-9]+)\>))", "str + len - 1;") == "(12,13)(12,13)(12,13)(12,13)"
      output(re"qwerty.*$", " jjdfjk sjdjjsqwerty jdfjdfhhdhfdjjjfj jjjdf") == "(14,44)"
      output(re"([a-zA-Z0-9_][^1]*[a-zA-Z0-9_])|(\$([^\$]+)\$)", "$\"},  /* email */") == "(9,14)(9,14)(?,?)(?,?)"
      output(re"([a-zA-Z0-9_][^1]*[a-zA-Z0-9_])|(\$([^\$]+)\$)", "$\"},  /* email */$") == "(0,18)(?,?)(0,18)(1,17)"
      output(re"(h[^1]*b)|(\$([^\$]+)\$)", "$  hbbbb") == "(3,8)(3,8)(?,?)(?,?)"
      output(re"(h[^1]*b)|(\$([^\$]+)\$)", "$ hsdhs $ ") == "(0,9)(?,?)(0,9)(1,8)"
      output(re"(a|aa)*", "a") == "(0,1)(0,1)"
      output(re"(a|aa)*", "aa") == "(0,2)(1,2)"
      output(re"(a|aa)*", "aaa") == "(0,3)(2,3)"
      output(re"(a|aa)*", "aaaa") == "(0,4)(3,4)"
      output(re"(a|aa)*", "aaaaa") == "(0,5)(4,5)"
      output(re"(a|aa)*", "aaaaaa") == "(0,6)(5,6)"
      output(re"(aaaa|aaa|a){3,4}", "aaaaaaaaaa") == "(0,10)(9,10)"
      output(re"(a)(a)", "aaaa") == "(0,2)(0,1)(1,2)"
      output(re"(a){2}", "aaaa") == "(0,2)(1,2)"
      output(re"(a|bcdef|g|ab|c|d|e|efg|fg)*", "abcdefg") == "(0,7)(6,7)"
      output(re"(.*) (.*) (.*) (.*) (.*)", "a  c d ee fff") == "(0,13)(0,2)(3,4)(5,6)(7,9)(10,13)"
      output(re"(.+?)(.+?)", "abcd") == "(0,2)(0,1)(1,2)"
      output(re"(a?)(a?)(a?)aaa", "aaa") == "(0,3)(0,0)(0,0)(0,0)"
      output(re"(ab)?(ab)?(ab)?aaa", "abaaa") == "(0,5)(0,2)(?,?)(?,?)"
      output(re"(.+)(.+)", "abcd") == "(0,4)(0,3)(3,4)"
      output(re"a(?:b|c|d){4,5}(.)", "acdbcdbe") == "(0,7)(6,7)"
      output(re"(?:c|d)(?:)(?:a(?:)(?:b)(?:b(?:))(?:b(?:)(?:b)))", "cabbbb") == "(0,6)"
      output(re"\<abc", "dabc") == ""
      output(re"a\([COM]+\)|([A-Za-z_%.]+):", "a(COM:=.o):") == "(2,6)(2,5)"
      output(re"xyz\([COM]+\)|(abcd[A-Za-z_%.]+):cd", "xyz(abcdCOM:cd):") == "(4,14)(4,11)"
      output(re"aaaaa(aa)aa(aa(a)a)?aa", "aaaaaaaaaaaaaaaaaaaaaaaaa") == "(0,15)(5,7)(9,13)(11,12)"
      output(re"^\.+(((/)\.\.+)+)?", "../../..") == "(0,8)(2,8)(5,8)(5,6)"
      output(re"^(http|https|ftp):[/]{2}([a-zA-Z0-9\\.]+\.[a-zA-Z]{2,4})(:[0-9]+)?/?([a-zA-Z0-9\\._?,'/+&amp;%$#=~]*)", "https://kyryl.tk/404") == "(0,20)(0,5)(8,16)(?,?)(17,20)"
      output(re"(\$\([a-zA-Z0-9_]+\))|(([A-Za-z_%.]+):)", "OBJ = $(SRC:.c=.o)") == "(8,12)(?,?)(8,12)(8,11)"
      output(reU".{5}", "рврыр") == "(0,10)"
      output(reU".{10,15}", "рврырdhsjhh") == "(0,16)"
      output(re"(a(abc)+){3,}", "aabcabcaabcaabc") == "(0,15)(11,15)(12,15)"
      output(re"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaaaaaaa") == "(0,16)(12,16)(14,16)(?,?)"
      output(re"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaaaa") == "(0,15)(12,15)(10,12)(13,14)"
      output(re"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaaa") == "(0,13)(12,13)(10,12)(?,?)"
      output(re"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaaa") == "(0,13)(12,13)(10,12)(?,?)"
      output(re"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaaa") == "(0,12)(8,12)(10,12)(?,?)"
      output(re"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaaa") == "(0,11)(8,11)(6,8)(9,10)"
      output(re"(aa(aa)|a(a)a|a){3,4}", "aaaaaaaaaa") == "(0,10)(9,10)(6,8)(?,?)"
      output(re"(a(a)(aa)|aaa|a){3,4}", "aaaaaaaaaa") == "(0,10)(9,10)(5,6)(6,8)"
      output(re"(a(a)(aa)|aaa|a){6}", "aaaaaaaaaa") == "(0,9)(8,9)(1,2)(2,4)"
      output(re"(a(a)(aa)|aaa|a){5,8}", "aaaaaaaaaa") == "(0,10)(9,10)(1,2)(2,4)"
      output(re"(a(a)(aa)|(aa)a|(a)){9}", "aaaaaaaaaa") == "(0,9)(8,9)(?,?)(?,?)(?,?)(8,9)"
      output(re"(a(a)(aa)|(aa)a|(a)){10}", "aaaaaaaaaa") == "(0,10)(9,10)(?,?)(?,?)(?,?)(9,10)"
      output(re"(a(a)(aa)|(aa)a|(a)){11}", "aaaaaaaaaa") == ""
      output(re"(a(a)a|(a)|a(aa)|aa){2,5}", "aaaaaaaaaaaaaa") == "(0,13)(12,13)(10,11)(12,13)(?,?)"
      output(re"((a)a|a(aa)|(aaaa)|(a*)){3,10}", "aaaaaaaaaaaaaaaaa") == "(0,17)(17,17)(14,15)(?,?)(?,?)(17,17)"
      output(re"((a)a|a(aa)|(aaaa)|(a+)){3,10}", "aaaaaaaaaaaaaaaaa") == "(0,17)(16,17)(14,15)(?,?)(?,?)(16,17)"
      output(re"(aa(aa){3}|(a)a+(a)|a){3,4}", "aaaaaaaaaaaaaaa") == "(0,15)(14,15)(6,8)(8,9)(13,14)"
      output(re"((ax)+b(ax)*)*", "axbaxaxbaxaxaxbaxaxaxax") == "(0,7)(0,7)(0,2)(5,7)"
      output(re"(a*)(b?)(b+)b{3}", "aaabbbbbbb") == "(0,10)(0,3)(3,4)(4,7)"
      output(re"(a*){2,3}", "aaaaaaaaaaaaaaaaa") == "(0,17)(17,17)"
      output(re"(a|at|ate|aten)(ten|en|n|d)", "atend") == "(0,4)(0,1)(1,4)"
      output(re"(a|aa|aaa|aaaaa)(aa|aaaa|aaa)", "aaaaaa") == "(0,3)(0,1)(1,3)"
      output(re"(a|a.|a..|a....)(a.|a...|a..)", "aaaaaa") == "(0,3)(0,1)(1,3)"
      output(re"(a*b|b*a)(a*b|b*a)", "bbaa") == "(0,2)(0,1)(1,2)"
      output(re"(ab|((ab)c|abc))c*", "abc") == "(0,3)(0,2)(?,?)(?,?)"
      output(re"((a*b*c*)|(a*c*b*))*", "abcacb") == "(0,6)(5,6)(5,6)(?,?)"
      output(re".*|.*(a|b)?", "aa") == "(0,2)(?,?)"
      output(re"((.a|.ab)(bc.|c.)|abc.)", "xabcx") == "(0,5)(0,5)(0,2)(2,5)"
      output(re"\\<", r"\<") == "(0,2)"
      output(re"\\\\<", r"\\\\<") == "(2,5)"
      output(re"[^a]*b", "hhagbdbdbjsjjjda..b") == "(3,9)"
      output(re"^(.+):([0-9]+):(.+)", "userspace-api/media/v4l/vbi_625.svg:98:   :34bstroke-linejoin:m;stroke-miteit:10;stroke-day:n;se-ty:1\"") == "(0,102)(0,35)(36,38)(39,102)"
      output(re"^(.+):([0-9]+).(.+)", "userspace-api/media/v4l/vbi_625.svg:98:   :34bstroke-linejoin:m;stroke-miteit:10;stroke-day:n;se-ty:1\"") == "(0,102)(0,77)(78,80)(81,102)"
      output(re"^(.+):([0-9]+).(.+){2,5}", "userspace-api/media/v4l/vbi_625.svg:98:   :34bstroke-linejoin:m;stroke-miteit:10;stroke-day:n;se-ty:1\"") == "(0,102)(0,77)(78,80)(101,102)"
      output(re"^(.+):([0-9]+):(.+)", "h:98:   :3234434butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1\"") == "(0,103)(0,1)(2,4)(5,103)"
      output(re"^(.+):([0-9]+).(.+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"") == "(0,93)(0,89)(90,91)(92,93)"
      output(re"^(.+):([0-9]+):(.+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"") == "(0,93)(0,1)(2,4)(5,93)"
      output(re"^(.+):([0-9]+):(.+)(.+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"") == "(0,93)(0,1)(2,4)(5,92)(92,93)"
      output(re"(.*):([0-9]*):(.*)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"") == "(0,93)(0,1)(2,4)(5,93)"
      output(re"(.*):([0-9]*)(   ):((.*)+)", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"") == "(0,93)(0,4)(5,5)(5,8)(9,93)(9,93)"
      output(re"(((aaa+)+)bb*)(.*):([0-9]*):(.+)", "aaaaabb grt:123:....") == "(0,20)(0,7)(0,5)(0,5)(7,11)(12,15)(16,20)"
      output(re"^(.+):([0-9]+):(.{8})+", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"") == "(0,93)(0,1)(2,4)(85,93)"
      output(re"^(.+):([0-9]+):((aaaa)|(.+))""", "h:98:   :3234utt;strokeliin:miter;stroke-mirlimit:10;stroke-dasharray:none;stroke-opacity:1n\"") == "(0,93)(0,1)(2,4)(5,92)(?,?)(5,92)"
      output(re"[0-9]+.(.*)", "650-253-0001") == "(0,12)(4,12)"
      output(re"[0-9]+.(.*)", "650-253-000123434-45551221") == "(0,26)(4,26)"
      output(re"([0-9])+.(.*)", "650-253-000123434-45551221") == "(0,26)(2,3)(4,26)"
      output(re"(([0-9])+)(.)(.*)", "650-253-000123434-455512213224hsaqer") == "(0,36)(0,3)(2,3)(3,4)(4,36)"
      output(re"(abc|sjd|qwq(hs|qw|oo)|(ty|xx|pp)we)", "ppwe") == "(0,4)(0,4)(?,?)(0,2)"
      output(re"(a?)?", "m") == "(0,0)(0,0)"
      output(re"(a?)?", "a") == "(0,1)(0,1)"
      output(re"(a?)??", "aa") == "(0,0)(?,?)"
      output(re"(a?)(a?)(a?a?)aaa(a?)|(b?)", "aa") == "(0,0)(?,?)(?,?)(?,?)(?,?)(0,0)"
      output(re"(a?)(a?)(a?a?)aaa(a?)|(b?)", "aaaaaaaaaaaaaa") == "(0,8)(0,1)(1,2)(2,4)(7,8)(?,?)"
      output(re"(a*)??", "a") == "(0,0)(?,?)"
      output(re"(a*)|(b*)|(c*)", "bbbbbbbbb") == "(0,0)(0,0)(?,?)(?,?)"
      output(re"(a?|a?)|(a*)?", "aaa") == "(0,1)(0,1)(?,?)"
      output(re"(a?|a?)a|(a*)?", "aaa") == "(0,2)(0,1)(?,?)"
      output(re"(a?|a?)d|(a*)?", "aaa") == "(0,3)(?,?)(0,3)"
      output(re"((a*b*c*)|(a*c*b*))+?", "bbb") == "(0,3)(0,3)(0,3)(?,?)"
      output(re"((a*b*c*)|(a*c*b*))*?", "bbb") == "(0,0)(?,?)(?,?)(?,?)"
      output(re"((a*b*c*)|(a*c*b*))+", "bbb") == "(0,3)(0,3)(0,3)(?,?)"

  test "Test Binary/Unicode Mode":
    check:
      match("\0\0\0", reG"\x00") == @["\0", "\0", "\0"]
      match("abc\0def\0", reG"\w+") == @["abc", "def"]
      split("a\0b\0c\0d", re"\x00") == @["a", "b", "c", "d"]
      contains("a", re"\x61")
      contains("a", re"\u0061")
      contains("a", re"\U00000061")
      contains("我", re"\xE6\x88\x91")
      contains("我", reU"\u6211")
      not contains("我", reU"\xE6\x88\x91")
      not contains("我", re"\u6211")
      contains("弢", re"\xF0\xAF\xA2\x94")
      contains("弢", reU"\U0002F894")
      not contains("弢", reU"\xF0\xAF\xA2\x94")
      not contains("弢", re"\U0002F894")

  test "Test split()":
    check:
      split("a,b,c", re",") == @["a", "b", "c"]
      split("00232this02939is39an22example111", re"\d+") == @["", "this", "is", "an", "example", ""]
      split("AAA :   : BBB", re"\s*:\s*") == @["AAA", "", "BBB"]
      split("", re",") == @[""]
      split(",,", re",") == @["", "", ""]
      split("abc", re"") == @["a", "b", "c"]
      split("ab", re"") == @["a", "b"]
      split("ab", re"\b") == @["ab"]
      split("a b", re" ") == @["a", "b"]
      split(",a,Ϊ,Ⓐ,弢,", reU",") == @["", "a", "Ϊ", "Ⓐ", "弢", ""]
      split("弢", reU"\xAF") == @["弢"]
      split("11a22Ϊ33Ⓐ44弢55", reU"\d+") == @["", "a", "Ϊ", "Ⓐ", "弢", ""]
      split("Words, words, words.", re"\W+") == @["Words", "words", "words", ""]
      split("0a3B9", re"[a-fA-F]+") == @["0", "3", "9"]
      split("1 2 3 4 5 6 ", re" ") == @["1", "2", "3", "4", "5", "6", ""]
      split("1  2  ", re" ") == @["1", "", "2", "", ""]
      split("1 2", re" ") == @["1", "2"]
      split("foo", re"foo") == @["", ""]
      split("", re"foo") == @[""]
      split("bar", re"foo") == @["bar"]
      split("abcd", re"", 2) == @["a", "b", "cd"]
      split("中文測試", reU"", 2) == @["中", "文", "測試"]
      split("中文", re"") == @["\xE4", "\xB8", "\xAD", "\xE6", "\x96", "\x87"]
      split("中文", reU"") == @["中", "文"]

  test "Test startsWith()":
    check:
      startsWith("abc", re"ab")
      startsWith("abc", re"bc") == false
      startsWith("弢ⒶΪ", reU"弢Ⓐ")
      startsWith("弢", re"\U0002F894") == false
      startsWith("弢", re"\xF0\xAF\xA2")
      startsWith("弢", reU"\U0002F894")
      startsWith("弢", reU"\xF0\xAF\xA2") == false
      startsWith("abc", re"\w")
      startsWith("abc", re"\d") == false
      startsWith("abc", re"(a|b)")
      startsWith("bc", re"(a|b)")
      startsWith("c", re"(a|b)") == false
      startsWith("abc", re"b", start = 1)

  test "Test endsWith()":
    check:
      endsWith("abc", re"bc")
      endsWith("abc", re"ab") == false
      endsWith("弢ⒶΪ", reU"ⒶΪ")
      endsWith("弢", re"\U0002F894") == false
      endsWith("弢", re"\xAF\xA2\x94")
      endsWith("弢", reU"\U0002F894")
      endsWith("弢", reU"\xF0\xAF\xA2") == false
      endsWith("abc", re"(b|c)")
      endsWith("ab", re"(b|c)")
      endsWith("a", re"(b|c)") == false

  test "Test replace()":
    check:
      replacef("a", re"(a)", "m($1)") == "m(a)"
      replacef("a", re"(a)", "m($1) m($1)") == "m(a) m(a)"
      replacef("aaa", re"(a*)", "m($1)") == "m(aaa)"
      replacef("abc", re"(a(b)c)", "m($1) m($2)") == "m(abc) m(b)"
      replacef("abc", re"(a(b))(c)", "m($1) m($2) m($3)") == "m(ab) m(b) m(c)"
      replacef("abcabc", re"(abc)*", "m($1)") == "m(abc)"
      replacef("abcabc", re"(abc*)", "m($1)") == "m(abc)m(abc)"
      replacef("abcabc", re"(abc)", "m($1)") == "m(abc)m(abc)"
      replacef("abcabc", re"(abc)", "m($1)") == "m(abc)m(abc)"
      replacef("abcab", re"(abc)", "m($1)") == "m(abc)ab"
      replacef("abcabc", re"((abc)*)", "m($1) m($2)") == "m(abcabc) m(abc)"
      replacef("abcabc", re"((a)bc)*", "m($1) m($2)") == "m(abc) m(a)"
      replacef("abc", re"(b)", "m($1)") == "am(b)c"
      replacef("abc", re"d", "m($1)") == "abc"
      replacef("abc", re"(d)", "m($1)") == "abc"
      replacef("aaa", re"a", "b") == "bbb"
      replacef("aaa", re"a", "b", 1) == "baa"
